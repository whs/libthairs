use ::libc;
pub type thchar_t = libc::c_uchar;
pub type WTTClass = libc::c_uint;
pub const AV3: WTTClass = 16;
pub const AV2: WTTClass = 15;
pub const AV1: WTTClass = 14;
pub const AD3: WTTClass = 13;
pub const AD2: WTTClass = 12;
pub const AD1: WTTClass = 11;
pub const TONE: WTTClass = 10;
pub const BD: WTTClass = 9;
pub const BV2: WTTClass = 8;
pub const BV1: WTTClass = 7;
pub const FV3: WTTClass = 6;
pub const FV2: WTTClass = 5;
pub const FV1: WTTClass = 4;
pub const LV: WTTClass = 3;
pub const CONS: WTTClass = 2;
pub const NON: WTTClass = 1;
pub const CTRL: WTTClass = 0;
pub type WTTOp = libc::c_uint;
pub const SR: WTTOp = 5;
pub const RJ: WTTOp = 4;
pub const AC: WTTOp = 3;
pub const XC: WTTOp = 2;
pub const CP: WTTOp = 1;
#[no_mangle]
pub static mut TACchtype_: [libc::c_short; 256] = [
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    FV3 as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    FV3 as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    CONS as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    FV1 as libc::c_int as libc::c_short,
    AV2 as libc::c_int as libc::c_short,
    FV1 as libc::c_int as libc::c_short,
    FV1 as libc::c_int as libc::c_short,
    AV1 as libc::c_int as libc::c_short,
    AV3 as libc::c_int as libc::c_short,
    AV2 as libc::c_int as libc::c_short,
    AV3 as libc::c_int as libc::c_short,
    BV1 as libc::c_int as libc::c_short,
    BV2 as libc::c_int as libc::c_short,
    BD as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    LV as libc::c_int as libc::c_short,
    LV as libc::c_int as libc::c_short,
    LV as libc::c_int as libc::c_short,
    LV as libc::c_int as libc::c_short,
    LV as libc::c_int as libc::c_short,
    FV2 as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    AD2 as libc::c_int as libc::c_short,
    TONE as libc::c_int as libc::c_short,
    TONE as libc::c_int as libc::c_short,
    TONE as libc::c_int as libc::c_short,
    TONE as libc::c_int as libc::c_short,
    AD1 as libc::c_int as libc::c_short,
    AD1 as libc::c_int as libc::c_short,
    AD3 as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    NON as libc::c_int as libc::c_short,
    CTRL as libc::c_int as libc::c_short,
];
#[no_mangle]
pub static mut TACio_op_: [[libc::c_short; 17]; 17] = [
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
    [
        XC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        SR as libc::c_int as libc::c_short,
        AC as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        CP as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
        RJ as libc::c_int as libc::c_short,
    ],
];
#[no_mangle]
pub unsafe extern "C" fn TACchtype(mut c: thchar_t) -> WTTClass {
    return TACchtype_[c as usize] as WTTClass;
}
#[no_mangle]
pub unsafe extern "C" fn TACio_op(mut c1: thchar_t, mut c2: thchar_t) -> WTTOp {
    return TACio_op_[TACchtype_[c1 as usize] as usize][TACchtype_[c2 as usize] as usize] as WTTOp;
}
